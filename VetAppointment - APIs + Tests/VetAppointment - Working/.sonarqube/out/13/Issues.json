{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.4.0.0",
        "fileVersion": "4.4.0-4.22520.11 (9e075f03)",
        "semanticVersion": "4.4.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'CleanDatabases' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Facultate/Anul_3/.NET/VetAppointment_S12/VetAppointment%20-%20APIs%20+%20Tests/VetAppointment%20-%20Working/VetAppointment.Integration.Test/BaseIntegrationTests.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 24,
                  "endLine": 20,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1816",
          "level": "note",
          "message": "Change DrugTests.Dispose() to call GC.SuppressFinalize(object). This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Facultate/Anul_3/.NET/VetAppointment_S12/VetAppointment%20-%20APIs%20+%20Tests/VetAppointment%20-%20Working/VetAppointment.Integration.Test/DrugTests.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 21,
                  "endLine": 70,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1816",
          "level": "note",
          "message": "Change VetClinicsControllerTests.Dispose() to call GC.SuppressFinalize(object). This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Facultate/Anul_3/.NET/VetAppointment_S12/VetAppointment%20-%20APIs%20+%20Tests/VetAppointment%20-%20Working/VetAppointment.Integration.Test/VetClinicsControllerTests_.cs",
                "region": {
                  "startLine": 339,
                  "startColumn": 21,
                  "endLine": 339,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1816": {
          "id": "CA1816",
          "shortDescription": "Dispose methods should call SuppressFinalize",
          "fullDescription": "A method that is an implementation of Dispose does not call GC.SuppressFinalize; or a method that is not an implementation of Dispose calls GC.SuppressFinalize; or a method calls GC.SuppressFinalize and passes something other than this (Me in Visual Basic).",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1816",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        }
      }
    }
  ]
}